// Method to create a post in DOM
let newPostDom = function (post) {
    return $(`<li id="post-${post._id}">
    <p>
        <small>
            <a class="delete-post-button" href="/posts/destroy/${post._id}">X</a>
        </small>
        ${post.content}
        <br>
        <small>
            ${post.user.name}
        </small>
    </p>
    <div class="post-comments">
        <form action="/comments/create" method="POST">
            <input type="text" name="content" placeholder="Type Here to add comment..." required>
            <input type="hidden" name="post" value="${post._id}" >
            <input type="submit" value="Add Comment">
        </form>
        <div class="post-comments-list">
            <ul id="post-comments-${post._id}">
                
            </ul>
        </div>
    </div>
</li>`)
}


// Method to delete a post from DOM
let deletePost = function (deleteLink) {
    $(deleteLink).click(function (e) {
        e.preventDefault();

        $.ajax({
            type: 'get',
            url: $(deleteLink).prop('href'),
            success: function (data) {
                $(`#post-${data.data.post_id}`).remove();
                new Noty({
                    theme: 'relax',
                    text: "Post Deleted!",
                    type: 'success',
                    layout: 'topRight',
                    timeout: 1500
                    
                }).show();
            }, error: function (error) {
                console.log(error.responseText);
            }
        });
    });
}

// Method to create a comment in DOM
let newCommentDom = function (comment) {
    return $(`<li id="comment-${comment._id}">
    <p>
        <small>
            <a class="delete-comment-button" href="/comments/destroy/${comment._id}">X</a>
        </small>
        ${comment.content}
        <br>
        <small>
            ${comment.user.name}
        </small>
    </p>
</li>`)
}

// Method to delete a comment from DOM
let deleteComment = function (deleteLink) {
    $(deleteLink).click(function (e) {
        e.preventDefault();

        $.ajax({
            type: 'get',
            url: $(deleteLink).prop('href'),
            success: function (data) {
                $(`#comment-${data.data.comment_id}`).remove();
                new Noty({
                    theme: 'relax',
                    text: "Comment Deleted!",
                    type: 'success',
                    layout: 'topRight',
                    timeout: 1500
                    
                }).show();
            }, error: function (error) {
                console.log(error.responseText);
            }
        });
    });
}

================================================================================================================
toggle like button in home.ejs
================================================================================================================
<script>
      $('.toggle-like-button').each(function(){
        let self = $(this);
        let toggleLike = new ToggleLike(self);
        let likesCount = parseInt(self.attr('data-likes'));
        let postId = self.attr('data-post-id');
        let likeForm = $('#like-form-'+postId);
        likeForm.submit(function(e){
          e.preventDefault();
          $.ajax({
            type: 'post',
            url: '/likes/toggle/?id='+postId+'&type=Post',
            success: function(data){
              console.log(data);
              let likeButton = $('#like-button-'+postId);
              if(data.data.deleted == true){
                likesCount -= 1;
              }else{
                likesCount += 1;
              }
              likeButton.attr('data-likes', likesCount);
              likeButton.html('<i class="fa-regular fa-heart" style="color: #d20f53;"></i> &nbsp;'+likesCount+' likes');
            },
            error: function(error){
              console.log(error.responseText);
            }
          });
        });
      })
    </script>