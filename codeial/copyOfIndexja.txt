const express = require('express');
const expressLayouts = require('express-ejs-layouts');
const cookieParser = require('cookie-parser');
const session = require('express-session'); // Add express-session
const passport = require('passport');
const passportLocal = require('./config/passport_local_strategy.js');
const app = express();
const port = 3000;
const db = require('./config/mongoose.js');
const MongoStore = require('connect-mongo')(session);

app.use(express.urlencoded({ extended: true }));
app.use(cookieParser());
app.use(express.static('./assets'));
app.use(expressLayouts);

app.set('layout extractStyles', true);
app.set('layout extractScripts', true);

app.set('view engine', 'ejs');
app.set('views', './views');

// Add express-session middleware
// MongoStore is used to store the session cookie in the db
app.use(session({
    name: 'codeial',
    secret: 'blashsomething',
    saveUninitialized: false,
    resave: false,
    cookie: {
        maxAge: (1000 * 60 * 100)
    },
    store: new MongoStore({
        mongooseConnection: db,
        autoRemove: 'disabled'
    }, (err) => {
        console.log(err || 'connect-mongodb setup ok'); // eslint-disable-line no-console
    })
}));


app.use(passport.initialize());
app.use(passport.session());

app.use(passport.setAuthenticatedUser);

app.use('/', require('./routes/index.js'));
app.use('/testing', require('./routes/testing.js'));
app.use('/users', require('./routes/users.js'));

app.listen(port, (err) => {
    if (err) {
        console.log('Server is down!', err);
    }
    console.log(`Server is running on port ${port}`);
});
